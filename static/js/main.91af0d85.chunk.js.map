{"version":3,"sources":["medal.svg","components/Header.js","components/ProgressBar.js","components/MainQuestionSection.js","components/QuestionCard.js","components/Result.js","components/QuizSection.js","components/App.js","index.js"],"names":["module","exports","Header","className","ProgressBar","MainQuestionSection","QuestionCard","question","index","lastIndex","handleSubmit","handleshowResult","currentQuestionIndex","useState","selectedIndex","setselectedIndex","id","style","pointerEvents","opacity","questionText","answerOptions","map","answer","key","onClick","handleOptionSelected","answerText","isCorrect","disabled","Result","retry","score","total","percentage","setPercentage","useEffect","parseFloat","toFixed","src","MedalImage","alt","QuizSection","questions","setCurrentQuestionIndex","showResult","setShowResult","setScore","element","document","getElementById","parentNode","scrollTop","offsetTop","card","querySelectorAll","classList","add","setTimeout","console","log","length","App","ReactDOM","render","cursor","querySelector","addEventListener","e","setAttribute","pageY","pageX","remove"],"mappings":"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","file":"static/js/main.91af0d85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/medal.65bebea8.svg\";","import React from 'react'\r\nimport '../styles/Header.scss'\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\n\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div className=\"header-section\">\r\n            <div className=\"logo-wrapper\">\r\n                <AllInclusiveIcon />\r\n                <h3>Quiz Interation</h3>\r\n            </div>\r\n            <div className=\"social-icons-wrapper\">\r\n                <FacebookIcon className=\"social-icon\" />\r\n                <LinkedInIcon className=\"social-icon\" />\r\n                <TwitterIcon className=\"social-icon\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"../styles/ProgressBar.scss\"\r\n\r\nexport default function ProgressBar() {\r\n    return (\r\n        <div className=\"progress-bar\">\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../styles/MainQuestionSection.scss'\r\nimport Header from '../components/Header'\r\nimport ProgressBar from '../components/ProgressBar'\r\n\r\nexport default function MainQuestionSection() {\r\n    return (\r\n        <div className=\"main-question-section\">\r\n            <Header />\r\n            <ProgressBar />\r\n            <section className=\"main-question-section-body\">\r\n                <h2 className=\"main-question-text\" >How well do you know your balloons?</h2>\r\n                <p className=\"main-question-subtitle\">A short quiz to test how well you know air balloons</p>\r\n                <div className=\"footer-wrapper\">\r\n                    <div className=\"inventor\">BY ISAAC NEWTON</div>\r\n                    <div className=\"date\">SEP 26, 2020</div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport \"../styles/QuestionCard.scss\"\r\n\r\nexport default function QuestionCard({question, index, lastIndex, handleSubmit, handleshowResult, currentQuestionIndex}) {\r\n    const [selectedIndex, setselectedIndex] = useState(null);\r\n\r\n    const handleOptionSelected = (index) => {\r\n        setselectedIndex(index)\r\n    }\r\n\r\n    return (\r\n        <div className=\"question-card-container\" id={\"Q\"+index} style={currentQuestionIndex !== index ? {pointerEvents: \"none\" ,opacity: \"0.4\" } : { opacity: \"1\" }}>\r\n            <div className=\"question-label\">QUESTION {index + 1}</div>\r\n            <div className=\"question-text\">{question.questionText}</div>\r\n            <div className='answer-section'>\r\n                {question.answerOptions.map((answer, index) => {\r\n                    return <button key={index} className={selectedIndex === index ? \"selected-option\" : \"option-btn\"} onClick={() => handleOptionSelected(index)}>{answer.answerText}</button>\r\n                })}\r\n                {lastIndex ? <button className=\"submit-btn\" onClick={() => handleshowResult(question.answerOptions[selectedIndex].isCorrect)} disabled={selectedIndex === null}>Submit and show results</button>\r\n                        : <button className=\"submit-btn\" onClick={() => handleSubmit(question.answerOptions[selectedIndex].isCorrect)} disabled={selectedIndex === null}>Submit</button>}\r\n\t\t\t</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport \"../styles/Result.scss\"\r\nimport MedalImage from '../medal.svg'\r\n\r\nexport default function Result({retry, score, total}) {\r\n    const [percentage, setPercentage] = useState(0)\r\n\r\n    useEffect(() => {\r\n        setPercentage(parseFloat(score * 100/ total).toFixed(0)+\"%\");\r\n    },[score, total])\r\n\r\n    return (\r\n        <div className=\"result-container\">\r\n            <img src={MedalImage} alt=\"Medal\"/>\r\n            <div className=\"aggregate-value\">{percentage}</div>\r\n            <div className=\"message\">{score !== 0 ? \"Congratulations\" : \"Oops!\"}</div>\r\n            <div className=\"success-ratio\">You got {score} out of {total} questions</div>\r\n            <button className=\"Retry\" onClick={retry}>Replay</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport '../styles/QuizSection.scss'\r\nimport QuestionCard from \"./QuestionCard\"\r\nimport Result from \"./Result\"\r\n\r\nexport default function QuizSection({questions}) {\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [showResult, setShowResult] = useState(false);\r\n    const [score, setScore] =  useState(0);\r\n    \r\n    const handleSubmit = (isCorrect) => {\r\n        debugger;\r\n        if(isCorrect){\r\n            setScore(score+1)\r\n        }\r\n        setCurrentQuestionIndex(currentQuestionIndex + 1)\r\n        let element = document.getElementById(\"Q\"+currentQuestionIndex);\r\n        element.parentNode.scrollTop = element.offsetTop + 500;\r\n        let card = document.querySelectorAll('.question-card-container')[currentQuestionIndex + 1];\r\n        card.classList.add(\"appear-animate\")\r\n        setTimeout(() => {\r\n           card.classList.add(\"appear-animate\")\r\n        },2000)\r\n    }\r\n\r\n    const handleshowResult = (isCorrect) => {\r\n        console.log(\"ShowResult clicked\")\r\n        if(isCorrect){\r\n            setScore(score+1)\r\n        }\r\n        setShowResult(true);\r\n    }\r\n\r\n    const retry = () => {\r\n        setShowResult(false);\r\n        setScore(0);\r\n        setCurrentQuestionIndex(0)\r\n    }\r\n\r\n    return (\r\n        <div className=\"quiz-section\">\r\n            {showResult && <Result retry={retry} score={score} total={questions.length} />}\r\n            {!showResult && questions.map((question, index) => {\r\n                return <QuestionCard \r\n                            question={question}\r\n                            key={index}\r\n                            index={index} \r\n                            lastIndex={questions.length-1 === index ? true : false} \r\n                            handleSubmit = {handleSubmit}\r\n                            handleshowResult = {handleshowResult}\r\n                            currentQuestionIndex={currentQuestionIndex}\r\n                        />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport '../styles/App.scss'\r\nimport MainQuestionSection from './MainQuestionSection'\r\nimport QuizSection from './QuizSection'\r\n\r\nexport default function App() {\r\n    const questions = [\r\n        {\r\n            questionText: \"Do you think air balloons are cool enough for 2018?\",\r\n            answerOptions : [\r\n                {answerText:\"Yes, Obviously\", isCorrect: true },\r\n                {answerText:\"No! C'mon\", isCorrect: false },\r\n                {answerText:\"Not sure. Really don't care\", isCorrect: false }\r\n            ]\r\n        },\r\n        {\r\n            questionText: \"Which of these show the trendy lock pattern?\",\r\n            answerOptions : [\r\n                {answerText:\"Yes, Obviously\", isCorrect: false },\r\n                {answerText:\"No! C'mon\", isCorrect: false },\r\n                {answerText:\"Not sure. Really don't care\", isCorrect: true }\r\n            ]\r\n        },\r\n        {\r\n            questionText: \"How does a hot air balloon fly?\",\r\n            answerOptions : [\r\n                {answerText:\"The gas that is foreign to the air that is emitted from burning propane is lighter than the air outside the balloon, which creates buoyancy\", isCorrect: false },\r\n                {answerText:\"The air being blown into the balloon pushed on the envelope which creates buoyancy that lifts the balloon\", isCorrect: true },\r\n                {answerText:\"The hot air being blown into the envelope is lighter than the air on the outside of the balloon, which created buoyancy that lifts the balloon\", isCorrect: false }\r\n            ]\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <MainQuestionSection />\r\n            <div className=\"quiz-wrapper\">\r\n                <QuizSection questions={questions}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './styles/index.scss';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nconst cursor = document.querySelector('.cursor');\r\n    document.addEventListener('mousemove', e => {\r\n        cursor.setAttribute(\"style\", \"top: \"+(e.pageY)+\"px; left: \"+(e.pageX)+\"px;\")\r\n    })\r\n\r\n    document.addEventListener(\"click\", () => {\r\n        cursor.classList.add(\"expand\")\r\n        setTimeout(() => {\r\n            cursor.classList.remove(\"expand\")\r\n        },500)\r\n    })"],"sourceRoot":""}